name: Build and Package

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: PyInstaller Action
      uses: Martin005/pyinstaller-action@v1.2.0
      with:
        python_ver: '3.12'
        spec: api/3S_PC_automation.py
        exe_path: dist/3S_PC_automation1.exe
        options: --onefile, --name "3S PC automation", --noconsole,

    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "draft-v0.1.0"
        release_name: "Draft Release v0.1.0"
        body: |
          Draft release containing the latest build.
        draft: true
        prerelease: false

    - name: Verify file existence
      run: |
        if (Test-Path "dist/3S_PC_automation1.exe") {
          echo "File exists"
        } else {
          echo "File does not exist"
          exit 1
        }
      shell: pwsh

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/3S_PC_automation1.exe
        asset_name: 3S_PC_automation1.exe
        asset_content_type: application/octet-stream
